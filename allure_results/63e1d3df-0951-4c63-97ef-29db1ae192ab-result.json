{"name": "test_order_numder[Chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000102ad9024 cxxbridge1$str$ptr + 1887276\n1   chromedriver                        0x0000000102ad1700 cxxbridge1$str$ptr + 1856264\n2   chromedriver                        0x00000001026e082c cxxbridge1$string$len + 88524\n3   chromedriver                        0x0000000102724834 cxxbridge1$string$len + 367060\n4   chromedriver                        0x000000010275c48c cxxbridge1$string$len + 595500\n5   chromedriver                        0x0000000102719474 cxxbridge1$string$len + 321044\n6   chromedriver                        0x000000010271a0e4 cxxbridge1$string$len + 324228\n7   chromedriver                        0x0000000102aa0a08 cxxbridge1$str$ptr + 1656336\n8   chromedriver                        0x0000000102aa5464 cxxbridge1$str$ptr + 1675372\n9   chromedriver                        0x0000000102a868ec cxxbridge1$str$ptr + 1549556\n10  chromedriver                        0x0000000102aa5c14 cxxbridge1$str$ptr + 1677340\n11  chromedriver                        0x0000000102a785fc cxxbridge1$str$ptr + 1491460\n12  chromedriver                        0x0000000102ac2a5c cxxbridge1$str$ptr + 1795684\n13  chromedriver                        0x0000000102ac2bd8 cxxbridge1$str$ptr + 1796064\n14  chromedriver                        0x0000000102ad1334 cxxbridge1$str$ptr + 1855292\n15  libsystem_pthread.dylib             0x000000018d5d6034 _pthread_start + 136\n16  libsystem_pthread.dylib             0x000000018d5d0e3c thread_start + 8", "trace": "self = <tests.test_order_list.TestStellarBurgersOrderList object at 0x10dde1270>\nlogin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7fc053a8071fe90953aa6fad72ac2495\")>\n\n    @allure.description('После оформления заказа его номер появляется в разделе В работе')\n    def test_order_numder(self, login):\n        recovery_page = LoginPage(login)\n        recovery_page_1 = OrdersPage(login)\n        recovery_page_2 = MainPage(login)\n        recovery_page.login_personal_account()\n        # проверяем, что мы действительно авторизовались\n        name_button = WebDriverWait(login, 3).until(EC.visibility_of_element_located\n                                                    ((OrdersLocators.COME_IN_BUTTON))).text\n        assert name_button == 'Оформить заказ'\n        recovery_page_1.tap_placing_an_order()\n        recovery_page_2.close_ingredient()\n        recovery_page_2.click_list_order()\n        time.sleep(10)\n        numder_my_order = WebDriverWait(login, 3).until(EC.visibility_of_element_located\n                                                           ((ListOrderLocators.ORDER_NUMBER))).text\n>       numder_orders = WebDriverWait(login, 10).until(EC.visibility_of_element_located\n                                                        ((ListOrderLocators.MY_ORDER_NUMBER))).text\n\ntests/test_order_list.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7fc053a8071fe90953aa6fad72ac2495\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x10db8e320>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000102ad9024 cxxbridge1$str$ptr + 1887276\nE       1   chromedriver                        0x0000000102ad1700 cxxbridge1$str$ptr + 1856264\nE       2   chromedriver                        0x00000001026e082c cxxbridge1$string$len + 88524\nE       3   chromedriver                        0x0000000102724834 cxxbridge1$string$len + 367060\nE       4   chromedriver                        0x000000010275c48c cxxbridge1$string$len + 595500\nE       5   chromedriver                        0x0000000102719474 cxxbridge1$string$len + 321044\nE       6   chromedriver                        0x000000010271a0e4 cxxbridge1$string$len + 324228\nE       7   chromedriver                        0x0000000102aa0a08 cxxbridge1$str$ptr + 1656336\nE       8   chromedriver                        0x0000000102aa5464 cxxbridge1$str$ptr + 1675372\nE       9   chromedriver                        0x0000000102a868ec cxxbridge1$str$ptr + 1549556\nE       10  chromedriver                        0x0000000102aa5c14 cxxbridge1$str$ptr + 1677340\nE       11  chromedriver                        0x0000000102a785fc cxxbridge1$str$ptr + 1491460\nE       12  chromedriver                        0x0000000102ac2a5c cxxbridge1$str$ptr + 1795684\nE       13  chromedriver                        0x0000000102ac2bd8 cxxbridge1$str$ptr + 1796064\nE       14  chromedriver                        0x0000000102ad1334 cxxbridge1$str$ptr + 1855292\nE       15  libsystem_pthread.dylib             0x000000018d5d6034 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x000000018d5d0e3c thread_start + 8\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "description": "После оформления заказа его номер появляется в разделе В работе", "steps": [{"name": "Авторизация пользователя", "status": "passed", "start": 1723990234665, "stop": 1723990236824}, {"name": "Тап на кнопку Оформить заказ", "status": "passed", "start": 1723990238439, "stop": 1723990238560}, {"name": "Закрывает всплывающие окно с ингридиентами", "status": "passed", "start": 1723990238560, "stop": 1723990238801}, {"name": "Тап на кнопку \"Лента заказов\"", "status": "passed", "start": 1723990238801, "stop": 1723990240195}], "parameters": [{"name": "driver", "value": "'Chrome'"}], "start": 1723990234665, "stop": 1723990260568, "uuid": "d5f24a9e-4fac-48a1-a1f5-41a00d664aed", "historyId": "f329b510b74d19003ea1920b5e4d45cd", "testCaseId": "fc48fcc2f5f02633153bf3c1ba24f20f", "fullName": "tests.test_order_list.TestStellarBurgersOrderList#test_order_numder", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_list"}, {"name": "subSuite", "value": "TestStellarBurgersOrderList"}, {"name": "host", "value": "mbp-anivchenko-OZON-C091QXFV0V"}, {"name": "thread", "value": "94086-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_list"}]}